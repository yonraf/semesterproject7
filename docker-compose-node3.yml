version: "3.9"

services:
  datanode3:
    image: bde2020/hadoop-datanode:2.0.0-hadoop3.2.1-java8
    container_name: datanode3
    network_mode: host
    restart: always
    volumes:
      - hadoop_datanode3:/hadoop/dfs/data
    ports:
      - 9864:9864
    environment:
      SERVICE_PRECONDITION: "10.123.252.233:9870"
    env_file:
      - ./hadoop.env

  zookeeper3:
    image: confluentinc/cp-zookeeper:7.2.1
    container_name: zookeeper3
    ports:
      - 2181:2181
    restart: unless-stopped
    network_mode: host
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_SERVER_ID: 3
      ZOOKEEPER_SERVERS: 10.123.252.233:2888:3888;10.123.252.200:2888:3888;10.123.252.209:2888:3888

  kafka3:
    image: confluentinc/cp-kafka:7.2.1
    container_name: kafka3
    ports:
      - 29094:29094
      - 9092:9092
    network_mode: host
    environment:
      KAFKA_ZOOKEEPER_CONNECT: 10.123.252.233:2181,10.123.252.200:2181,10.123.252.209:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: "INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT"
      KAFKA_LISTENERS: INTERNAL://0.0.0.0:9092,EXTERNAL://0.0.0.0:29094
      KAFKA_ADVERTISED_LISTENERS: "INTERNAL://10.123.252.233:9092,EXTERNAL://host.docker.internal:29094"
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_BROKER_ID: 3
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_PARTITION_ASSIGNMENT_STRATEGY: org.apache.kafka.clients.consumer.RoundRobinAssignor
    restart: unless-stopped
    depends_on:
      - zookeeper3

  spark-worker-3:
    image: bde2020/spark-worker:3.3.0-hadoop3.3
    container_name: spark-worker-3
    ports:
      - 8081:8081
    environment:
      - "SPARK_MASTER=10.123.252.233:7077"
    network_mode: host

volumes:
  hadoop_datanode3:

networks:
  default:
    name: big-data-network